version: '3.8'

services:
  auth:
    build: ./services/auth
    container_name: auth-app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 1
    env_file:
      - ./services/auth/.env
    depends_on:
      - auth-db
    ports:
      - "${AUTH_PORT}:8000"
    volumes:
      - ./services/auth:/app
    networks:
      - main-net

  auth-db:
    image: postgres:15-alpine
    container_name: auth-db
    restart: always
    env_file:
      - ./services/auth/.env
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - main-net

  team:
    build: ./services/team
    container_name: team-app
    # command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 4
    env_file:
      - ./services/team/.env
    depends_on:
      - team-db
    ports:
      - "${TEAM_PORT}:8000"
    volumes:
      - ./services/team:/app
    networks:
      - main-net

  team-db:
    image: postgres:15-alpine
    container_name: team-db
    restart: always
    env_file:
      - ./services/team/db.env
    volumes:
      - team-db-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - main-net

  org-structure:
    build: ./services/org_structure
    container_name: org-structure-app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 1
    env_file:
      - ./services/org_structure/.env
    depends_on:
      - org-structure-db
    ports:
      - "${ORG_STRUCTURE_PORT}:8000"
    volumes:
      - ./services/org_structure:/app
    networks:
      - main-net

  org-structure-db:
    image: postgres:15-alpine
    container_name: org-structure-db
    restart: always
    environment:
      POSTGRES_DB: org_structure
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - org-structure-db-data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - main-net

  tasks:
    build: ./services/tasks
    container_name: tasks-app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 1
    env_file:
      - ./services/tasks/.env
    depends_on:
      - tasks-db
    ports:
      - "${TASKS_PORT}:8000"
    volumes:
      - ./services/tasks:/app
    networks:
      - main-net

  tasks-db:
    image: postgres:15-alpine
    container_name: tasks-db
    restart: always
    environment:
      POSTGRES_DB: tasks
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - tasks-db-data:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    networks:
      - main-net

  motivation:
    build: ./services/motivation
    container_name: motivation-app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 1
    env_file:
      - ./services/motivation/.env
    ports:
      - "${MOTIVATION_PORT}:8000"
    volumes:
      - ./services/motivation:/app
    networks:
      - main-net

  motivation-db:
    image: postgres:15-alpine
    container_name: motivation-db
    restart: always
    environment:
      POSTGRES_DB: motivation
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - motivation-db-data:/var/lib/postgresql/data
    ports:
      - "5437:5432"
    networks:
      - main-net

  meetings:
    build: ./services/meetings
    container_name: meetings-app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 1
    env_file:
      - ./services/meetings/.env
    depends_on:
      - meetings-db
    ports:
      - "${MEETINGS_PORT}:8000"
    volumes:
      - ./services/meetings:/app
    networks:
      - main-net

  meetings-db:
    image: postgres:15-alpine
    container_name: meetings-db
    restart: always
    environment:
      POSTGRES_DB: meetings
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - meetings-db-data:/var/lib/postgresql/data
    ports:
      - "5438:5432"
    networks:
      - main-net

  calendar:
    build: ./services/calendar
    container_name: calendar-app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 1
    env_file:
      - ./services/calendar/.env
    depends_on:
      - calendar-db
    ports:
      - "${CALENDAR_PORT}:8000"
    volumes:
      - ./services/calendar:/app
    networks:
      - main-net

  calendar-db:
    image: postgres:15-alpine
    container_name: calendar-db
    restart: always
    environment:
      POSTGRES_DB: calendar
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - calendar-db-data:/var/lib/postgresql/data
    ports:
      - "5439:5432"
    networks:
      - main-net

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - main-net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "status"]
      interval: 10s
      timeout: 10s
      retries: 10

  admin-panel:
    build: ./services/admin_panel
    container_name: admin-panel-app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers 1
    ports:
      - "${ADMIN_PANEL_PORT:-8010}:8000"
    volumes:
      - ./services/admin_panel:/app
    networks:
      - main-net
    env_file:
      - ./services/admin_panel/db.env
    depends_on:
      admin-panel-db:
        condition: service_healthy
    restart: always

  admin-panel-db:
    image: postgres:15-alpine
    container_name: admin-panel-db
    restart: always
    environment:
      POSTGRES_DB: admin_panel
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - admin-panel-db-data:/var/lib/postgresql/data
    ports:
      - "5440:5432"
    networks:
      - main-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  auth-db-data:
  team-db-data:
  org-structure-db-data:
  tasks-db-data:
  motivation-db-data:
  meetings-db-data:
  calendar-db-data:
  admin-panel-db-data:

networks:
  main-net:
    driver: bridge
